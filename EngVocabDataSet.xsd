<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EngVocabDataSet" targetNamespace="http://tempuri.org/EngVocabDataSet.xsd" xmlns:mstns="http://tempuri.org/EngVocabDataSet.xsd" xmlns="http://tempuri.org/EngVocabDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EngVocabConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EngVocabConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EngVocabApp.Properties.Settings.GlobalReference.Default.EngVocabConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EngVocabTableAdapter" GeneratorDataComponentClassName="EngVocabTableAdapter" Name="EngVocab" UserDataComponentName="EngVocabTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EngVocabConnectionString (Settings)" DbObjectName="dbo.EngVocab" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EngVocab] WHERE (([Id] = @Original_Id) AND ([Vocab] = @Original_Vocab))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Vocab" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Vocab" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EngVocab] ([Id], [Vocab], [Meaning]) VALUES (@Id, @Vocab, @Meaning);
SELECT Id, Vocab, Meaning FROM EngVocab WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Vocab" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Vocab" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Meaning" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Vocab, Meaning FROM dbo.EngVocab</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EngVocab] SET [Id] = @Id, [Vocab] = @Vocab, [Meaning] = @Meaning WHERE (([Id] = @Original_Id) AND ([Vocab] = @Original_Vocab));
SELECT Id, Vocab, Meaning FROM EngVocab WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Vocab" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Vocab" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Meaning" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Vocab" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Vocab" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Vocab" DataSetColumn="Vocab" />
              <Mapping SourceColumn="Meaning" DataSetColumn="Meaning" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EngVocabDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EngVocabDataSet" msprop:Generator_UserDSName="EngVocabDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="EngVocab" msprop:Generator_TableClassName="EngVocabDataTable" msprop:Generator_TableVarName="tableEngVocab" msprop:Generator_RowChangedName="EngVocabRowChanged" msprop:Generator_TablePropName="EngVocab" msprop:Generator_RowDeletingName="EngVocabRowDeleting" msprop:Generator_RowChangingName="EngVocabRowChanging" msprop:Generator_RowEvHandlerName="EngVocabRowChangeEventHandler" msprop:Generator_RowDeletedName="EngVocabRowDeleted" msprop:Generator_RowClassName="EngVocabRow" msprop:Generator_UserTableName="EngVocab" msprop:Generator_RowEvArgName="EngVocabRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:AutoIncrementSeed="1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:anyType" />
              <xs:element name="Vocab" msprop:Generator_ColumnVarNameInTable="columnVocab" msprop:Generator_ColumnPropNameInRow="Vocab" msprop:Generator_ColumnPropNameInTable="VocabColumn" msprop:Generator_UserColumnName="Vocab">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Meaning" msprop:Generator_ColumnVarNameInTable="columnMeaning" msprop:Generator_ColumnPropNameInRow="Meaning" msprop:Generator_ColumnPropNameInTable="MeaningColumn" msprop:Generator_UserColumnName="Meaning">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="InsertDate" msprop:Generator_ColumnVarNameInTable="columnInsertDate" msprop:Generator_ColumnPropNameInRow="InsertDate" msprop:Generator_ColumnPropNameInTable="InsertDateColumn" msprop:Generator_UserColumnName="InsertDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="UpdateDate" msprop:Generator_ColumnVarNameInTable="columnUpdateDate" msprop:Generator_ColumnPropNameInRow="UpdateDate" msprop:Generator_ColumnPropNameInTable="UpdateDateColumn" msprop:Generator_UserColumnName="UpdateDate" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EngVocab" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>